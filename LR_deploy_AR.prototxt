name: "LR"
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 1 dim: 1 dim: 7 dim: 7 } }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    pad: 0
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    pad: 0
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "reluconv2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "conv2"
  top: "fc1"
  param {
    lr_mult: 0.01
    decay_mult: 1
  }
  param {
    lr_mult: 0.1
    decay_mult: 0
  }
  inner_product_param {
    num_output: 196
    weight_filler {
      type: "xavier"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
#layer {
#  name: "relufc1"
#  type: "ReLU"
#  bottom: "fc1"
#  top: "fc1"
#}

layer {
    name: "reshape"
    type: "Reshape"
    bottom: "fc1"
    top: "reshape"
    reshape_param {
      shape {
        dim: 0  # copy the dimension from below
        dim: -1
        dim: 14
        dim: 14 # infer it from the other dimensions
      }
    }
  }


